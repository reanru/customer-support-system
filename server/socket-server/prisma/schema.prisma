// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  name          String?
  email         String?
  password      String?   
  role          Role     @default(AGENT) // 'ADMIN' | 'AGENT' | 'USER'
  // sessions    Session[]
  // messages      Message[]
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  @@map("users")
}

model Session {
  id            String   @id @default(uuid())
  // user_id     String?
  // user        User?    @relation(fields: [user_id], references: [id])
  visitor_id    String?  // Untuk sesi anonim
  // isActive    Boolean  @default(true)
  status        SessionStatus
  messages      Message[]
  assigned_to   String? // Agent ID
  created_at    DateTime @default(now())

  @@map("sessions")
}

model Message {
  id            String   @id @default(uuid())
  session_id    String
  session       Session  @relation(fields: [session_id], references: [id])
  sender_id     String?
  // sender        User?    @relation(fields: [sender_id], references: [id])
  sender_type   Role     // ADMIN | AGENT | USER
  content       String
  read_at       DateTime?
  created_at    DateTime @default(now())

  @@map("messages")
}

enum Role {
  VISITOR
  AGENT
  ADMIN
}

enum SessionStatus {
  WAITING
  ASSIGNED
  ACTIVE
  RESOLVED
  CLOSED
  EXPIRED
  ABANDONED
}